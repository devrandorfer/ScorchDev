{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subnetName": {
      "type": "string",
      "allowedValues": [
        "service",
        "web"
      ],
      "metadata": {
        "description": "The name of the subnet to join."
      },
      "defaultValue": "service"
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The computer name"
      },
      "defaultValue": "sco-"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "admin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_A1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14",
        "Standard_A2m_v2",
        "Standard_A3m_v2",
        "Standard_A4m_v2",
        "Standard_F1",
        "Standard_F2",
        "Standard_F3",
        "Standard_F4"
      ],
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_A2m_v2"
    },
    "AvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Availability Set to create or place into"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "registrationKey": {
      "type": "securestring",
      "metadata": {
        "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
      }
    },
    "registrationUrl": {
      "type": "string",
      "metadata": {
        "description": "Registration url of the Azure Automation DSC pull/reporting server"
      }
    },
    "serverConfiguration": {
      "type": "string",
      "allowedValues": [
        "DomainComputer.MemberServerDev",
        "DomainComputer.MemberServerQA",
        "DomainComputer.MemberServerProd",
        "WebApp.FrontEnd",
        "AzureAutomation.HybridRunbookWorker"
      ],
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "DomainComputer.MemberServerDev"
    }
  },
  "variables": {
    "nicName": "[concat(parameters('vmName'), 'nic')]",
    "virtualNetworkResourceGroup": "scorchdev",
    "virtualNetworkName": "USEast2",
    "vnetID": "[resourceId(variables('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "resourceId": "[resourceGroup().id]",
    "modulesURL": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
    "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
    "configurationMode": "ApplyAndAutoCorrect",
    "configurationModeFrequencyMins": 15,
    "refreshFrequencyMins": 30,
    "rebootNodeIfNeeded": true,
    "allowModuleOverwrite": true,
    "actionAfterReboot": "ContinueConfiguration"
  },
  "resources": [
    {
      "name": "[variables('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "dependsOn": [
      ],
      "apiVersion": "2015-06-15",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('AvailabilitySetName')",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "3",
        "managed": "true"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "resourceId('Microsoft.Compute/availabilitySets', [parameters('AvailabilitySetName')])"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('registrationKey')]"
              }
            },
            "settings": {
              "ModulesUrl": "[variables('modulesUrl')]",
              "SasToken": "",
              "ConfigurationFunction": "[variables('configurationFunction')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('registrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('serverConfiguration')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "[variables('configurationMode')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "[variables('configurationModeFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "[variables('refreshFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": "[variables('rebootNodeIfNeeded')]",
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "[variables('actionAfterReboot')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": "[variables('allowModuleOverwrite')]",
                  "TypeName": "System.Boolean"
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
